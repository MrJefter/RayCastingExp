#include <iostream>
#include "TXLib.h"

using namespace std;

char mapArray[161][161] = {
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"####################AAAAAAAAAAAAAAAAAAABK###################AAAAAAAAAAAAAAAAAAABM###################AAAAAAAAAAAAAAAAAAABA#######################################",
"####################B...................K###################L...................M###################N...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................K###################K...................M###################M...................A#######################################",
"####################A...................L###################K...................N###################M...................B#######################################",
"####################A...................KKKKKKKKKKKKKKKKKKKLK...................MMMMMMMMMMMMMMMMMMMNM...................A#######################################",
"####################B...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................B#######################################",
"####################A...................IIIIIIIIIIIIIIIIIIIJI...................GGGGGGGGGGGGGGGGGGGHG...................A#######################################",
"####################B...................J###################I...................H###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################J...................G###################H...................B#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################B...................J###################I...................H###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################I...................G###################G...................A#######################################",
"####################A...................I###################J...................G###################H...................B#######################################",
"####################A...................IJIIIIIIIIIIIIIIIIIII...................GHGGGGGGGGGGGGGGGGGGG...................A#######################################",
"####################B...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................A#######################################",
"####################A...................................................................................................B#######################################",
"####################A...................CDCCCCCCCCCCCCCCCCCCC...................EFEEEEEEEEEEEEEEEEEEE...................A#######################################",
"####################B...................C###################D...................E###################F...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................C###################C...................E###################E...................A#######################################",
"####################A...................D###################C...................F###################E...................B#######################################",
"####################ABAAAAAAAAAAAAAAAAAAA###################CBAAAAAAAAAAAAAAAAAAA###################EBAAAAAAAAAAAAAAAAAAA#######################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
"################################################################################################################################################################",
};

int main() {
    HDC wallTexture = txLoadImage("wall_texture.bmp", 200, 200);
    float xView, yView, xPos = 30, yPos = 80, winXCounter, rayLenght, shiftSpeed = 0.5, redCornerCount = 0;
    float angle = 0;
    txCreateWindow(640, 200);
    txUpdateWindow(false);
    bool isSoundPlaying = false;

    char keyTmp;
    char wKey = 87, aKey = 65, sKey = 83, dKey = 68, qKey = 81, eKey = 69;
    while (true) {
        xView = xPos + cos(angle) * 50;
        yView = yPos + sin(angle) * 50;
        winXCounter = 0;
        COLORREF tempColor = RGB (50, 50, 50);
        txSetColor(tempColor);
        int bgGrad = 200;
        while (tempColor != RGB (0, 0, 0)) {
            txLine(0, bgGrad, 640, bgGrad);
            tempColor = RGB (GetRValue(tempColor) - 1, GetGValue(tempColor) - 1, GetBValue(tempColor) - 1);
            txSetColor(tempColor);
            bgGrad--;
        }
        /*for (float xCount = angle - (3.14/180)*30; xCount < angle + (3.14/180)*30; xCount += 1.0/640.0) {
            float yCount;
            for (yCount = 1; yCount <= 160; yCount++) {
                if (mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)] == 'M') {
                    redCornerCount++;
                    break;
                }
                else if (mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)] == '#') {
                    if (redCornerCount != 0) {
                        rayLenght = (int)sqrt(pow(cos(xCount - (redCornerCount/2)) * yCount, 2) + pow(sin(xCount - (redCornerCount/2)) * yCount, 2));
                        redCornerCount = 0;
                        txSetColor(RGB (255 - rayLenght*3, 0, 0));
                        txSetFillColor(RGB (255 - rayLenght*3, 0, 0));
                        txLine(winXCounter - redCornerCount/2, ((200 - 200 / (1 + 0.08 * rayLenght)) / 2), winXCounter - redCornerCount/2, (200 - (200 - 200 / (1 + 0.04 * rayLenght)) / 2));
                    }
                    else {
                        rayLenght = (int)sqrt(pow(cos(xCount) * yCount, 2) + pow(sin(xCount) * yCount, 2));
                        txSetColor(RGB (0, 255 - rayLenght*3, 0));
                        txSetFillColor(RGB (0, 255 - rayLenght*3, 0));
                        txLine(winXCounter, ((200 - 200 / (1 + 0.08 * rayLenght)) / 2), winXCounter, (200 - (200 - 200 / (1 + 0.04 * rayLenght)) / 2));
                    }
                    break;
                }
                rayLenght = -1;
            }
            winXCounter++;

        }*/
        int segmentCount = 0, amountOfUnusedSegments = 640;
        char firstMarker = 0, secondMarker = 0;
        float firstRayLenght = 0, secondRayLenght = 0, step = 0, yCount = 0, xCount = 0, startPos = 0;
        txSetColor(RGB (255, 0, 0));
        for (xCount = angle - (3.14/180)*30; xCount < angle + (3.14/180)*30; xCount += 1.0/640.0) {
            for (yCount = 1; yCount <= 160; yCount++) {
                if (amountOfUnusedSegments > 0 && mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)] != '.') {
                    if (mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)]%2 == 1) {
                        cout << mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)] << endl;
                        if (segmentCount == 0) {
                            firstMarker = mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)];
                            firstRayLenght = sqrt(pow(cos(xCount) * yCount, 2) + pow(sin(xCount) * yCount, 2));
                            startPos = xCount*640 + 334;
                            cout << firstMarker << endl << firstRayLenght << endl;
                        }
                        segmentCount++;
                        break;
                    }
                    else if (firstMarker + 1 == mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)]) {
                        secondMarker = mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)];
                        secondRayLenght = sqrt(pow(cos(xCount) * yCount, 2) + pow(sin(xCount) * yCount, 2));
                        step = (firstRayLenght - secondRayLenght) / segmentCount;
                        amountOfUnusedSegments -= segmentCount;
                        cout << secondMarker << endl << secondRayLenght << endl
                        << step << endl <<  amountOfUnusedSegments << endl << endl;
                        for (int i = startPos; i < segmentCount + startPos; i++) {
                            cout << i << endl;
                            txLine(i, (int)(200 - 200 / (1 + 0.08 * firstRayLenght) / 2), i, (int)(200 - (200 - 200 / (1 + 0.04 * firstRayLenght) / 2)));
                            if ((int)firstRayLenght != (int)secondRayLenght) {
                                firstRayLenght -= step;
                                cout << firstRayLenght << endl;
                            }
                            txRedrawWindow();
                        }
                        segmentCount = 0;
                        firstMarker = 0;
                        break;
                    }
                    else if (mapArray[(int)(xPos + cos(xCount) * yCount)][(int)(yPos + sin(xCount) * yCount)]%2 == 0 && segmentCount == 0) {
                        break;
                    }
                }
            }
        }
        txRedrawWindow();
        if (GetKeyState(16) < -126) shiftSpeed = 1.5;
        else shiftSpeed = 1;
        if ((GetKeyState(wKey) < -126 || GetKeyState(aKey) < -126 || GetKeyState(sKey) < -126 || GetKeyState(dKey) < -126)) {
            if (!isSoundPlaying) {
                txPlaySound("running_sound");
                isSoundPlaying = true;
            }
        }
        else {
            txPlaySound(0);
            isSoundPlaying = false;
        }
        if (GetKeyState(wKey) < -126) {
            if (mapArray[(int)(xPos + (xView-xPos)/40)][(int)(yPos + (yView-yPos)/40)] == '.') {
                xPos = xPos + (xView-xPos)/(80 / shiftSpeed);
                yPos = yPos + (yView-yPos)/(80 / shiftSpeed);
            }
        }
        if (GetKeyState(sKey) < -126) {
            if (mapArray[(int)(xPos - (xView-xPos)/40)][(int)(yPos - (yView-yPos)/40)] == '.') {
                xPos = xPos - (xView-xPos)/(80 / shiftSpeed);
                yPos = yPos - (yView-yPos)/(80 / shiftSpeed);
            }
        }
        if (GetKeyState(aKey) < -126) {
            if (mapArray[(int)(xPos - (cos(angle+(3.14/180)*90)*50)/40)][(int)(yPos - (sin(angle+(3.14/180)*90)*50)/40)] == '.') {
                xPos = xPos + (cos(angle-(3.14/180)*90)*50)/(80 / shiftSpeed);
                yPos = yPos + (sin(angle-(3.14/180)*90)*50)/(80 / shiftSpeed);
            }
        }
        if (GetKeyState(dKey) < -126) {
            if (mapArray[(int)(xPos + (cos(angle+(3.14/180)*90)*50)/40)][(int)(yPos + (sin(angle+(3.14/180)*90)*50)/40)] == '.') {
                xPos = xPos + (cos(angle+(3.14/180)*90)*50)/(80 / shiftSpeed);
                yPos = yPos + (sin(angle+(3.14/180)*90)*50)/(80 / shiftSpeed);
            }
        }
        if (GetKeyState(qKey) < -126) {
            angle -= (0.04 * shiftSpeed);
        }
        if (GetKeyState(eKey) < -126) {
            angle += (0.04 * shiftSpeed);
        }
        txSetFillColor(RGB (0, 0, 0));
        txClear();
    }
}
